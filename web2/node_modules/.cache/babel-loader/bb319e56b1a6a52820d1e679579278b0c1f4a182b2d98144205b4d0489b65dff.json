{"ast":null,"code":"// src/pages/CounselingRecordPage.js\nimport React,{useState,useEffect}from'react';import{useParams,Link,useNavigate}from'react-router-dom';import styled from'styled-components';import Layout from'../components/Layout';import{doc,getDoc,updateDoc,collection,addDoc,getDocs,query,orderBy,serverTimestamp}from'firebase/firestore';import{db}from'../firebase';import{useAuth}from'../contexts/AuthContext';// 컨테이너\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Container=styled.div`\n  margin-bottom: 2rem;\n`;// 뒤로가기 링크\nconst BackLink=styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  font-size: 0.9rem;\n  color: #6c757d;\n  text-decoration: none;\n  margin-bottom: 1rem;\n  \n  &:hover {\n    color: #495057;\n  }\n`;// 2열 그리드\nconst TwoColumnGrid=styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1.5rem;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;// 카드\nconst Card=styled.div`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n`;// 카드 제목\nconst CardTitle=styled.h3`\n  font-size: 1.1rem;\n  margin: 0 0 1.5rem;\n  color: #343a40;\n  border-bottom: 1px solid #dee2e6;\n  padding-bottom: 0.75rem;\n`;// 요청 헤더\nconst RequestHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;// 환자 정보\nconst PatientInfo=styled.div`\n  display: flex;\n  align-items: center;\n`;// 환자 이니셜 아바타\nconst PatientAvatar=styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background-color: #2a5e8c;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin-right: 1rem;\n`;// 환자 이름\nconst PatientName=styled.h2`\n  font-size: 1.2rem;\n  margin: 0 0 0.25rem;\n`;// 배지\nconst Badge=styled.span`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border-radius: 50px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  background-color: ${props=>{if(props.status==='pending')return'#ffc107';if(props.status==='accepted')return'#28a745';if(props.status==='completed')return'#6c757d';return'#dc3545';}};\n  color: white;\n`;// 정보 그룹\nconst InfoGroup=styled.div`\n  margin-bottom: 1rem;\n`;// 정보 라벨\nconst InfoLabel=styled.p`\n  font-size: 0.8rem;\n  color: #6c757d;\n  margin: 0 0 0.25rem;\n`;// 정보 값\nconst InfoValue=styled.p`\n  margin: 0;\n  font-weight: 500;\n`;// 요청 내용\nconst RequestContent=styled.div`\n  white-space: pre-line;\n  margin-bottom: 1.5rem;\n`;// 버튼\nconst Button=styled.button`\n  background-color: ${props=>props.secondary?'#6c757d':'#2a5e8c'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.75rem 1.5rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  \n  &:hover {\n    background-color: ${props=>props.secondary?'#5a6268':'#1d4269'};\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;// 버튼 그룹\nconst ButtonGroup=styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-top: 1.5rem;\n`;// 텍스트 영역\nconst TextArea=styled.textarea`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  resize: vertical;\n  min-height: 150px;\n  margin-bottom: 1rem;\n`;// a일력 필드\nconst Input=styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  font-size: 1rem;\n`;// 폼 그룹\nconst FormGroup=styled.div`\n  margin-bottom: 1.5rem;\n`;// 라벨\nconst Label=styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #495057;\n`;// 에러 메시지\nconst ErrorMessage=styled.p`\n  color: #dc3545;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n`;// 노트 목록\nconst NotesList=styled.div`\n  margin-top: 1.5rem;\n`;// 노트 아이템\nconst NoteItem=styled.div`\n  padding: 1rem;\n  border-bottom: 1px solid #dee2e6;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;// 노트 헤더\nconst NoteHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n`;// 노트 작성자\nconst NoteAuthor=styled.span`\n  font-weight: 500;\n`;// 노트 날짜\nconst NoteDate=styled.span`\n  color: #6c757d;\n  font-size: 0.8rem;\n`;// 노트 내용\nconst NoteContent=styled.p`\n  margin: 0;\n  white-space: pre-line;\n`;// 빈 상태 메시지\nconst EmptyState=styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #6c757d;\n`;// 상태 스텝\nconst StatusSteps=styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n`;// 스텝\nconst Step=styled.div`\n  flex: 1;\n  text-align: center;\n  position: relative;\n  \n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    top: 2rem;\n    right: 0;\n    width: 100%;\n    height: 2px;\n    background-color: ${props=>props.active?'#2a5e8c':'#e9ecef'};\n    z-index: 1;\n  }\n`;// 스텝 아이콘\nconst StepIcon=styled.div`\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  background-color: ${props=>props.active?'#2a5e8c':'#e9ecef'};\n  color: ${props=>props.active?'white':'#6c757d'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin: 0 auto 0.5rem;\n  z-index: 2;\n  position: relative;\n`;// 스텝 라벨\nconst StepLabel=styled.div`\n  font-size: 0.9rem;\n  color: ${props=>props.active?'#343a40':'#6c757d'};\n  font-weight: ${props=>props.active?'500':'400'};\n`;// 상태를 한글로 변환\nconst getStatusText=status=>{const statuses={'pending':'대기 중','accepted':'예약 확정','completed':'완료','cancelled':'취소됨'};return statuses[status]||'알 수 없음';};// 연락 방법을 한글로 변환\nconst getContactMethodText=method=>{const methods={'phone':'전화','sms':'문자메시지','kakaotalk':'카카오톡','email':'이메일'};return methods[method]||'알 수 없음';};// 연락 가능 시간을 한글로 변환\nconst getContactTimeText=time=>{const times={'anytime':'언제든지 가능','morning':'오전 (9시-12시)','afternoon':'오후 (12시-18시)','evening':'저녁 (18시-21시)'};return times[time]||'알 수 없음';};function CounselingRecordPage(){const{requestId}=useParams();const navigate=useNavigate();const{currentUser,socialWorkerData}=useAuth();const[request,setRequest]=useState(null);const[patient,setPatient]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[notes,setNotes]=useState([]);const[newNote,setNewNote]=useState('');const[appointmentDate,setAppointmentDate]=useState('');const[appointmentTime,setAppointmentTime]=useState('');const[validationError,setValidationError]=useState('');// 상담 요청 및 관련 데이터 불러오기\nuseEffect(()=>{const fetchData=async()=>{try{var _requestDoc$data$crea;// 상담 요청 불러오기\nconst requestDoc=await getDoc(doc(db,\"counselingRequests\",requestId));if(!requestDoc.exists()){setError(\"상담 요청을 찾을 수 없습니다.\");setLoading(false);return;}const requestData={id:requestDoc.id,...requestDoc.data(),createdAt:((_requestDoc$data$crea=requestDoc.data().createdAt)===null||_requestDoc$data$crea===void 0?void 0:_requestDoc$data$crea.toDate())||new Date()};setRequest(requestData);// 환자 정보 불러오기\nif(requestData.userId){const patientDoc=await getDoc(doc(db,\"patients\",requestData.userId));if(patientDoc.exists()){setPatient({id:patientDoc.id,...patientDoc.data()});}}// 상담 노트 불러오기\nconst notesQuery=query(collection(db,\"counselingRequests\",requestId,\"notes\"),orderBy(\"createdAt\",\"desc\"));const notesSnapshot=await getDocs(notesQuery);const notesData=[];notesSnapshot.forEach(doc=>{var _doc$data$createdAt;notesData.push({id:doc.id,...doc.data(),createdAt:((_doc$data$createdAt=doc.data().createdAt)===null||_doc$data$createdAt===void 0?void 0:_doc$data$createdAt.toDate())||new Date()});});setNotes(notesData);// 이미 예약된 일정 정보 설정\nif(requestData.appointmentDate){setAppointmentDate(requestData.appointmentDate);}if(requestData.appointmentTime){setAppointmentTime(requestData.appointmentTime);}setLoading(false);}catch(error){console.error(\"데이터 불러오기 오류:\",error);setError(\"데이터를 불러오는 중 오류가 발생했습니다.\");setLoading(false);}};fetchData();},[requestId]);// 상담 요청 상태 업데이트\nconst handleStatusUpdate=async status=>{try{const updates={status,updatedAt:serverTimestamp()};// 상태가 accepted인 경우 상담 일정 정보 추가\nif(status==='accepted'){if(!appointmentDate||!appointmentTime){setValidationError(\"상담 일정을 입력해 주세요.\");return;}updates.appointmentDate=appointmentDate;updates.appointmentTime=appointmentTime;}await updateDoc(doc(db,\"counselingRequests\",requestId),updates);// 로컬 상태 업데이트\nsetRequest(prev=>({...prev,...updates,updatedAt:new Date()}));setValidationError('');}catch(error){console.error(\"상태 업데이트 오류:\",error);setError(\"상태 업데이트 중 오류가 발생했습니다.\");}};// 상담 노트 추가\nconst handleAddNote=async e=>{e.preventDefault();if(!newNote.trim()){setValidationError(\"노트 내용을 입력해 주세요.\");return;}try{const noteData={content:newNote,authorId:currentUser.uid,authorName:(socialWorkerData===null||socialWorkerData===void 0?void 0:socialWorkerData.name)||\"사회복지사\",createdAt:serverTimestamp()};const noteRef=await addDoc(collection(db,\"counselingRequests\",requestId,\"notes\"),noteData);const newNoteWithId={id:noteRef.id,...noteData,createdAt:new Date()};setNotes(prev=>[newNoteWithId,...prev]);setNewNote('');setValidationError('');}catch(error){console.error(\"노트 추가 오류:\",error);setValidationError(\"노트 추가 중 오류가 발생했습니다.\");}};// 환자 상세 페이지로 이동\nconst goToPatientDetail=()=>{if(patient!==null&&patient!==void 0&&patient.id){navigate(`/patients/${patient.id}`);}};// 환자 이니셜 가져오기\nconst getPatientInitials=()=>{if(!(request!==null&&request!==void 0&&request.name))return'?';const nameParts=request.name.split(' ');if(nameParts.length>1){return`${nameParts[0][0]}${nameParts[1][0]}`.toUpperCase();}return request.name[0].toUpperCase();};// 현재 상태에 따른 스텝 인덱스 가져오기\nconst getActiveStepIndex=()=>{switch(request===null||request===void 0?void 0:request.status){case'pending':return 0;case'accepted':return 1;case'completed':return 2;case'cancelled':return 3;default:return 0;}};if(loading){return/*#__PURE__*/_jsx(Layout,{title:\"\\uC0C1\\uB2F4 \\uAE30\\uB85D\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})})});}if(error){return/*#__PURE__*/_jsx(Layout,{title:\"\\uC0C1\\uB2F4 \\uAE30\\uB85D\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackLink,{to:\"/counseling-requests\",children:\"\\u2190 \\uC0C1\\uB2F4 \\uC694\\uCCAD \\uBAA9\\uB85D\\uC73C\\uB85C\"}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(\"p\",{children:error})})]})});}if(!request){return/*#__PURE__*/_jsx(Layout,{title:\"\\uC0C1\\uB2F4 \\uAE30\\uB85D\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackLink,{to:\"/counseling-requests\",children:\"\\u2190 \\uC0C1\\uB2F4 \\uC694\\uCCAD \\uBAA9\\uB85D\\uC73C\\uB85C\"}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uB2F4 \\uC694\\uCCAD \\uC815\\uBCF4\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]})});}const activeStepIndex=getActiveStepIndex();return/*#__PURE__*/_jsx(Layout,{title:\"\\uC0C1\\uB2F4 \\uAE30\\uB85D\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackLink,{to:\"/counseling-requests\",children:\"\\u2190 \\uC0C1\\uB2F4 \\uC694\\uCCAD \\uBAA9\\uB85D\\uC73C\\uB85C\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(RequestHeader,{children:[/*#__PURE__*/_jsxs(PatientInfo,{children:[/*#__PURE__*/_jsx(PatientAvatar,{children:getPatientInitials()}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PatientName,{children:request.name||'익명'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC694\\uCCAD\\uC77C: \",request.createdAt.toLocaleDateString()]})]})]}),/*#__PURE__*/_jsx(Badge,{status:request.status,children:getStatusText(request.status)})]}),/*#__PURE__*/_jsxs(StatusSteps,{children:[/*#__PURE__*/_jsxs(Step,{active:activeStepIndex>=0,children:[/*#__PURE__*/_jsx(StepIcon,{active:activeStepIndex>=0,children:\"1\"}),/*#__PURE__*/_jsx(StepLabel,{active:activeStepIndex>=0,children:\"\\uC694\\uCCAD \\uC811\\uC218\"})]}),/*#__PURE__*/_jsxs(Step,{active:activeStepIndex>=1,children:[/*#__PURE__*/_jsx(StepIcon,{active:activeStepIndex>=1,children:\"2\"}),/*#__PURE__*/_jsx(StepLabel,{active:activeStepIndex>=1,children:\"\\uC0C1\\uB2F4 \\uC608\\uC57D\"})]}),/*#__PURE__*/_jsxs(Step,{active:activeStepIndex>=2,children:[/*#__PURE__*/_jsx(StepIcon,{active:activeStepIndex>=2,children:\"3\"}),/*#__PURE__*/_jsx(StepLabel,{active:activeStepIndex>=2,children:\"\\uC0C1\\uB2F4 \\uC644\\uB8CC\"})]})]}),/*#__PURE__*/_jsxs(TwoColumnGrid,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC694\\uCCAD \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uC5F0\\uB77D\\uCC98\"}),/*#__PURE__*/_jsx(InfoValue,{children:request.phone||'정보 없음'})]}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uC5F0\\uB77D \\uBC29\\uBC95\"}),/*#__PURE__*/_jsx(InfoValue,{children:getContactMethodText(request.contactMethod)})]}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uC5F0\\uB77D \\uAC00\\uB2A5 \\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(InfoValue,{children:getContactTimeText(request.contactTime)})]}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uD76C\\uB9DD \\uC0C1\\uB2F4 \\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(InfoValue,{children:request.preferredDate||'정보 없음'})]}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uD76C\\uB9DD \\uC0C1\\uB2F4 \\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(InfoValue,{children:request.preferredTime||'정보 없음'})]}),request.status==='accepted'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC608\\uC57D\\uB41C \\uC0C1\\uB2F4\"}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uC0C1\\uB2F4 \\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(InfoValue,{children:request.appointmentDate||'정보 없음'})]}),/*#__PURE__*/_jsxs(InfoGroup,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uC0C1\\uB2F4 \\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(InfoValue,{children:request.appointmentTime||'정보 없음'})]})]}),/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC0C1\\uB2F4 \\uD76C\\uB9DD \\uC0AC\\uD56D\"}),/*#__PURE__*/_jsx(RequestContent,{children:request.concerns||'상담 희망 사항이 없습니다.'}),/*#__PURE__*/_jsx(RequestContent,{children:request.additionalInfo&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"\\uCD94\\uAC00 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"p\",{children:request.additionalInfo})]})}),patient&&/*#__PURE__*/_jsx(Button,{onClick:goToPatientDetail,children:\"\\uD658\\uC790 \\uC0C1\\uC138 \\uC815\\uBCF4 \\uBCF4\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[request.status==='pending'&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC0C1\\uB2F4 \\uC77C\\uC815 \\uB4F1\\uB85D\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"appointmentDate\",children:\"\\uC0C1\\uB2F4 \\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(Input,{type:\"date\",id:\"appointmentDate\",value:appointmentDate,onChange:e=>setAppointmentDate(e.target.value),min:new Date().toISOString().split('T')[0]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"appointmentTime\",children:\"\\uC0C1\\uB2F4 \\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(Input,{type:\"time\",id:\"appointmentTime\",value:appointmentTime,onChange:e=>setAppointmentTime(e.target.value)})]}),validationError&&/*#__PURE__*/_jsx(ErrorMessage,{children:validationError}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>handleStatusUpdate('accepted'),children:\"\\uC0C1\\uB2F4 \\uD655\\uC815\"}),/*#__PURE__*/_jsx(Button,{secondary:true,onClick:()=>handleStatusUpdate('cancelled'),children:\"\\uC694\\uCCAD \\uAC70\\uC808\"})]})]}),request.status==='accepted'&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC0C1\\uB2F4 \\uC9C4\\uD589\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleStatusUpdate('completed'),children:\"\\uC0C1\\uB2F4 \\uC644\\uB8CC \\uCC98\\uB9AC\"})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"\\uC0C1\\uB2F4 \\uB178\\uD2B8\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddNote,children:[/*#__PURE__*/_jsx(TextArea,{value:newNote,onChange:e=>setNewNote(e.target.value),placeholder:\"\\uC0C1\\uB2F4 \\uB0B4\\uC6A9, \\uD6C4\\uC18D \\uC870\\uCE58 \\uB4F1\\uC744 \\uAE30\\uB85D\\uD558\\uC138\\uC694...\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"\\uB178\\uD2B8 \\uC800\\uC7A5\"})]}),notes.length===0?/*#__PURE__*/_jsx(EmptyState,{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uB4F1\\uB85D\\uB41C \\uC0C1\\uB2F4 \\uB178\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}):/*#__PURE__*/_jsx(NotesList,{children:notes.map(note=>/*#__PURE__*/_jsxs(NoteItem,{children:[/*#__PURE__*/_jsxs(NoteHeader,{children:[/*#__PURE__*/_jsx(NoteAuthor,{children:note.authorName}),/*#__PURE__*/_jsx(NoteDate,{children:note.createdAt.toLocaleString()})]}),/*#__PURE__*/_jsx(NoteContent,{children:note.content})]},note.id))})]})]})]})]})]})});}export default CounselingRecordPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","styled","Layout","doc","getDoc","updateDoc","collection","addDoc","getDocs","query","orderBy","serverTimestamp","db","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Container","div","BackLink","TwoColumnGrid","Card","CardTitle","h3","RequestHeader","PatientInfo","PatientAvatar","PatientName","h2","Badge","span","props","status","InfoGroup","InfoLabel","p","InfoValue","RequestContent","Button","button","secondary","ButtonGroup","TextArea","textarea","Input","input","FormGroup","Label","label","ErrorMessage","NotesList","NoteItem","NoteHeader","NoteAuthor","NoteDate","NoteContent","EmptyState","StatusSteps","Step","active","StepIcon","StepLabel","getStatusText","statuses","getContactMethodText","method","methods","getContactTimeText","time","times","CounselingRecordPage","requestId","navigate","currentUser","socialWorkerData","request","setRequest","patient","setPatient","loading","setLoading","error","setError","notes","setNotes","newNote","setNewNote","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","validationError","setValidationError","fetchData","_requestDoc$data$crea","requestDoc","exists","requestData","id","data","createdAt","toDate","Date","userId","patientDoc","notesQuery","notesSnapshot","notesData","forEach","_doc$data$createdAt","push","console","handleStatusUpdate","updates","updatedAt","prev","handleAddNote","e","preventDefault","trim","noteData","content","authorId","uid","authorName","name","noteRef","newNoteWithId","goToPatientDetail","getPatientInitials","nameParts","split","length","toUpperCase","getActiveStepIndex","title","children","to","activeStepIndex","toLocaleDateString","phone","contactMethod","contactTime","preferredDate","preferredTime","concerns","additionalInfo","onClick","htmlFor","type","value","onChange","target","min","toISOString","onSubmit","placeholder","map","note","toLocaleString"],"sources":["C:/Users/20201/OneDrive/바탕 화면/patient_survey/web2/src/pages/CounselingRecordPage.js"],"sourcesContent":["// src/pages/CounselingRecordPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/Layout';\r\nimport { \r\n  doc, getDoc, updateDoc, collection, \r\n  addDoc, getDocs, query, orderBy, \r\n  serverTimestamp \r\n} from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// 컨테이너\r\nconst Container = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n// 뒤로가기 링크\r\nconst BackLink = styled(Link)`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  font-size: 0.9rem;\r\n  color: #6c757d;\r\n  text-decoration: none;\r\n  margin-bottom: 1rem;\r\n  \r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n`;\r\n\r\n// 2열 그리드\r\nconst TwoColumnGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1.5rem;\r\n  \r\n  @media (max-width: 992px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\n// 카드\r\nconst Card = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\n// 카드 제목\r\nconst CardTitle = styled.h3`\r\n  font-size: 1.1rem;\r\n  margin: 0 0 1.5rem;\r\n  color: #343a40;\r\n  border-bottom: 1px solid #dee2e6;\r\n  padding-bottom: 0.75rem;\r\n`;\r\n\r\n// 요청 헤더\r\nconst RequestHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\n// 환자 정보\r\nconst PatientInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// 환자 이니셜 아바타\r\nconst PatientAvatar = styled.div`\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  background-color: #2a5e8c;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-right: 1rem;\r\n`;\r\n\r\n// 환자 이름\r\nconst PatientName = styled.h2`\r\n  font-size: 1.2rem;\r\n  margin: 0 0 0.25rem;\r\n`;\r\n\r\n// 배지\r\nconst Badge = styled.span`\r\n  display: inline-block;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 50px;\r\n  font-size: 0.75rem;\r\n  font-weight: 700;\r\n  background-color: ${props => {\r\n    if (props.status === 'pending') return '#ffc107';\r\n    if (props.status === 'accepted') return '#28a745';\r\n    if (props.status === 'completed') return '#6c757d';\r\n    return '#dc3545';\r\n  }};\r\n  color: white;\r\n`;\r\n\r\n// 정보 그룹\r\nconst InfoGroup = styled.div`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\n// 정보 라벨\r\nconst InfoLabel = styled.p`\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n  margin: 0 0 0.25rem;\r\n`;\r\n\r\n// 정보 값\r\nconst InfoValue = styled.p`\r\n  margin: 0;\r\n  font-weight: 500;\r\n`;\r\n\r\n// 요청 내용\r\nconst RequestContent = styled.div`\r\n  white-space: pre-line;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\n// 버튼\r\nconst Button = styled.button`\r\n  background-color: ${props => props.secondary ? '#6c757d' : '#2a5e8c'};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 0.75rem 1.5rem;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.secondary ? '#5a6268' : '#1d4269'};\r\n  }\r\n  \r\n  &:disabled {\r\n    background-color: #cccccc;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\n// 버튼 그룹\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\n// 텍스트 영역\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  min-height: 150px;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\n// a일력 필드\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\n// 폼 그룹\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\n// 라벨\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #495057;\r\n`;\r\n\r\n// 에러 메시지\r\nconst ErrorMessage = styled.p`\r\n  color: #dc3545;\r\n  font-size: 0.9rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\n// 노트 목록\r\nconst NotesList = styled.div`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\n// 노트 아이템\r\nconst NoteItem = styled.div`\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\n// 노트 헤더\r\nconst NoteHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\n// 노트 작성자\r\nconst NoteAuthor = styled.span`\r\n  font-weight: 500;\r\n`;\r\n\r\n// 노트 날짜\r\nconst NoteDate = styled.span`\r\n  color: #6c757d;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\n// 노트 내용\r\nconst NoteContent = styled.p`\r\n  margin: 0;\r\n  white-space: pre-line;\r\n`;\r\n\r\n// 빈 상태 메시지\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #6c757d;\r\n`;\r\n\r\n// 상태 스텝\r\nconst StatusSteps = styled.div`\r\n  display: flex;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n// 스텝\r\nconst Step = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n  position: relative;\r\n  \r\n  &:not(:last-child)::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 2rem;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: ${props => props.active ? '#2a5e8c' : '#e9ecef'};\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\n// 스텝 아이콘\r\nconst StepIcon = styled.div`\r\n  width: 4rem;\r\n  height: 4rem;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.active ? '#2a5e8c' : '#e9ecef'};\r\n  color: ${props => props.active ? 'white' : '#6c757d'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5rem;\r\n  margin: 0 auto 0.5rem;\r\n  z-index: 2;\r\n  position: relative;\r\n`;\r\n\r\n// 스텝 라벨\r\nconst StepLabel = styled.div`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.active ? '#343a40' : '#6c757d'};\r\n  font-weight: ${props => props.active ? '500' : '400'};\r\n`;\r\n\r\n// 상태를 한글로 변환\r\nconst getStatusText = (status) => {\r\n  const statuses = {\r\n    'pending': '대기 중',\r\n    'accepted': '예약 확정',\r\n    'completed': '완료',\r\n    'cancelled': '취소됨'\r\n  };\r\n  return statuses[status] || '알 수 없음';\r\n};\r\n\r\n// 연락 방법을 한글로 변환\r\nconst getContactMethodText = (method) => {\r\n  const methods = {\r\n    'phone': '전화',\r\n    'sms': '문자메시지',\r\n    'kakaotalk': '카카오톡',\r\n    'email': '이메일'\r\n  };\r\n  return methods[method] || '알 수 없음';\r\n};\r\n\r\n// 연락 가능 시간을 한글로 변환\r\nconst getContactTimeText = (time) => {\r\n  const times = {\r\n    'anytime': '언제든지 가능',\r\n    'morning': '오전 (9시-12시)',\r\n    'afternoon': '오후 (12시-18시)',\r\n    'evening': '저녁 (18시-21시)'\r\n  };\r\n  return times[time] || '알 수 없음';\r\n};\r\n\r\nfunction CounselingRecordPage() {\r\n  const { requestId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser, socialWorkerData } = useAuth();\r\n  \r\n  const [request, setRequest] = useState(null);\r\n  const [patient, setPatient] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [appointmentDate, setAppointmentDate] = useState('');\r\n  const [appointmentTime, setAppointmentTime] = useState('');\r\n  const [validationError, setValidationError] = useState('');\r\n  \r\n  // 상담 요청 및 관련 데이터 불러오기\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // 상담 요청 불러오기\r\n        const requestDoc = await getDoc(doc(db, \"counselingRequests\", requestId));\r\n        \r\n        if (!requestDoc.exists()) {\r\n          setError(\"상담 요청을 찾을 수 없습니다.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        const requestData = {\r\n          id: requestDoc.id,\r\n          ...requestDoc.data(),\r\n          createdAt: requestDoc.data().createdAt?.toDate() || new Date()\r\n        };\r\n        \r\n        setRequest(requestData);\r\n        \r\n        // 환자 정보 불러오기\r\n        if (requestData.userId) {\r\n          const patientDoc = await getDoc(doc(db, \"patients\", requestData.userId));\r\n          \r\n          if (patientDoc.exists()) {\r\n            setPatient({\r\n              id: patientDoc.id,\r\n              ...patientDoc.data()\r\n            });\r\n          }\r\n        }\r\n        \r\n        // 상담 노트 불러오기\r\n        const notesQuery = query(\r\n          collection(db, \"counselingRequests\", requestId, \"notes\"),\r\n          orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        \r\n        const notesSnapshot = await getDocs(notesQuery);\r\n        const notesData = [];\r\n        \r\n        notesSnapshot.forEach(doc => {\r\n          notesData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            createdAt: doc.data().createdAt?.toDate() || new Date()\r\n          });\r\n        });\r\n        \r\n        setNotes(notesData);\r\n        \r\n        // 이미 예약된 일정 정보 설정\r\n        if (requestData.appointmentDate) {\r\n          setAppointmentDate(requestData.appointmentDate);\r\n        }\r\n        \r\n        if (requestData.appointmentTime) {\r\n          setAppointmentTime(requestData.appointmentTime);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"데이터 불러오기 오류:\", error);\r\n        setError(\"데이터를 불러오는 중 오류가 발생했습니다.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [requestId]);\r\n  \r\n  // 상담 요청 상태 업데이트\r\n  const handleStatusUpdate = async (status) => {\r\n    try {\r\n      const updates = {\r\n        status,\r\n        updatedAt: serverTimestamp()\r\n      };\r\n      \r\n      // 상태가 accepted인 경우 상담 일정 정보 추가\r\n      if (status === 'accepted') {\r\n        if (!appointmentDate || !appointmentTime) {\r\n          setValidationError(\"상담 일정을 입력해 주세요.\");\r\n          return;\r\n        }\r\n        \r\n        updates.appointmentDate = appointmentDate;\r\n        updates.appointmentTime = appointmentTime;\r\n      }\r\n      \r\n      await updateDoc(doc(db, \"counselingRequests\", requestId), updates);\r\n      \r\n      // 로컬 상태 업데이트\r\n      setRequest(prev => ({\r\n        ...prev,\r\n        ...updates,\r\n        updatedAt: new Date()\r\n      }));\r\n      \r\n      setValidationError('');\r\n    } catch (error) {\r\n      console.error(\"상태 업데이트 오류:\", error);\r\n      setError(\"상태 업데이트 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n  \r\n  // 상담 노트 추가\r\n  const handleAddNote = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newNote.trim()) {\r\n      setValidationError(\"노트 내용을 입력해 주세요.\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const noteData = {\r\n        content: newNote,\r\n        authorId: currentUser.uid,\r\n        authorName: socialWorkerData?.name || \"사회복지사\",\r\n        createdAt: serverTimestamp()\r\n      };\r\n      \r\n      const noteRef = await addDoc(\r\n        collection(db, \"counselingRequests\", requestId, \"notes\"),\r\n        noteData\r\n      );\r\n      \r\n      const newNoteWithId = {\r\n        id: noteRef.id,\r\n        ...noteData,\r\n        createdAt: new Date()\r\n      };\r\n      \r\n      setNotes(prev => [newNoteWithId, ...prev]);\r\n      setNewNote('');\r\n      setValidationError('');\r\n    } catch (error) {\r\n      console.error(\"노트 추가 오류:\", error);\r\n      setValidationError(\"노트 추가 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n  \r\n  // 환자 상세 페이지로 이동\r\n  const goToPatientDetail = () => {\r\n    if (patient?.id) {\r\n      navigate(`/patients/${patient.id}`);\r\n    }\r\n  };\r\n  \r\n  // 환자 이니셜 가져오기\r\n  const getPatientInitials = () => {\r\n    if (!request?.name) return '?';\r\n    \r\n    const nameParts = request.name.split(' ');\r\n    if (nameParts.length > 1) {\r\n      return `${nameParts[0][0]}${nameParts[1][0]}`.toUpperCase();\r\n    }\r\n    \r\n    return request.name[0].toUpperCase();\r\n  };\r\n  \r\n  // 현재 상태에 따른 스텝 인덱스 가져오기\r\n  const getActiveStepIndex = () => {\r\n    switch (request?.status) {\r\n      case 'pending': return 0;\r\n      case 'accepted': return 1;\r\n      case 'completed': return 2;\r\n      case 'cancelled': return 3;\r\n      default: return 0;\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Layout title=\"상담 기록\">\r\n        <Container>\r\n          <p>데이터를 불러오는 중...</p>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <Layout title=\"상담 기록\">\r\n        <Container>\r\n          <BackLink to=\"/counseling-requests\">← 상담 요청 목록으로</BackLink>\r\n          <Card>\r\n            <p>{error}</p>\r\n          </Card>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  if (!request) {\r\n    return (\r\n      <Layout title=\"상담 기록\">\r\n        <Container>\r\n          <BackLink to=\"/counseling-requests\">← 상담 요청 목록으로</BackLink>\r\n          <Card>\r\n            <p>상담 요청 정보를 찾을 수 없습니다.</p>\r\n          </Card>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  const activeStepIndex = getActiveStepIndex();\r\n  \r\n  return (\r\n    <Layout title=\"상담 기록\">\r\n      <Container>\r\n        <BackLink to=\"/counseling-requests\">← 상담 요청 목록으로</BackLink>\r\n        \r\n        <Card>\r\n          <RequestHeader>\r\n            <PatientInfo>\r\n              <PatientAvatar>{getPatientInitials()}</PatientAvatar>\r\n              <div>\r\n                <PatientName>{request.name || '익명'}</PatientName>\r\n                <p>요청일: {request.createdAt.toLocaleDateString()}</p>\r\n              </div>\r\n            </PatientInfo>\r\n            <Badge status={request.status}>\r\n              {getStatusText(request.status)}\r\n            </Badge>\r\n          </RequestHeader>\r\n          \r\n          <StatusSteps>\r\n            <Step active={activeStepIndex >= 0}>\r\n              <StepIcon active={activeStepIndex >= 0}>1</StepIcon>\r\n              <StepLabel active={activeStepIndex >= 0}>요청 접수</StepLabel>\r\n            </Step>\r\n            <Step active={activeStepIndex >= 1}>\r\n              <StepIcon active={activeStepIndex >= 1}>2</StepIcon>\r\n              <StepLabel active={activeStepIndex >= 1}>상담 예약</StepLabel>\r\n            </Step>\r\n            <Step active={activeStepIndex >= 2}>\r\n              <StepIcon active={activeStepIndex >= 2}>3</StepIcon>\r\n              <StepLabel active={activeStepIndex >= 2}>상담 완료</StepLabel>\r\n            </Step>\r\n          </StatusSteps>\r\n          \r\n          <TwoColumnGrid>\r\n            <div>\r\n              <CardTitle>요청 정보</CardTitle>\r\n              \r\n              <InfoGroup>\r\n                <InfoLabel>연락처</InfoLabel>\r\n                <InfoValue>{request.phone || '정보 없음'}</InfoValue>\r\n              </InfoGroup>\r\n              \r\n              <InfoGroup>\r\n                <InfoLabel>연락 방법</InfoLabel>\r\n                <InfoValue>{getContactMethodText(request.contactMethod)}</InfoValue>\r\n              </InfoGroup>\r\n              \r\n              <InfoGroup>\r\n                <InfoLabel>연락 가능 시간</InfoLabel>\r\n                <InfoValue>{getContactTimeText(request.contactTime)}</InfoValue>\r\n              </InfoGroup>\r\n              \r\n              <InfoGroup>\r\n                <InfoLabel>희망 상담 날짜</InfoLabel>\r\n                <InfoValue>{request.preferredDate || '정보 없음'}</InfoValue>\r\n              </InfoGroup>\r\n              \r\n              <InfoGroup>\r\n                <InfoLabel>희망 상담 시간</InfoLabel>\r\n                <InfoValue>{request.preferredTime || '정보 없음'}</InfoValue>\r\n              </InfoGroup>\r\n              \r\n              {request.status === 'accepted' && (\r\n                <>\r\n                  <CardTitle>예약된 상담</CardTitle>\r\n                  <InfoGroup>\r\n                    <InfoLabel>상담 날짜</InfoLabel>\r\n                    <InfoValue>{request.appointmentDate || '정보 없음'}</InfoValue>\r\n                  </InfoGroup>\r\n                  <InfoGroup>\r\n                    <InfoLabel>상담 시간</InfoLabel>\r\n                    <InfoValue>{request.appointmentTime || '정보 없음'}</InfoValue>\r\n                  </InfoGroup>\r\n                </>\r\n              )}\r\n              \r\n              <CardTitle>상담 희망 사항</CardTitle>\r\n              <RequestContent>\r\n                {request.concerns || '상담 희망 사항이 없습니다.'}\r\n              </RequestContent>\r\n              \r\n              <RequestContent>\r\n                {request.additionalInfo && (\r\n                  <>\r\n                    <InfoLabel>추가 정보</InfoLabel>\r\n                    <p>{request.additionalInfo}</p>\r\n                  </>\r\n                )}\r\n              </RequestContent>\r\n              \r\n              {patient && (\r\n                <Button onClick={goToPatientDetail}>\r\n                  환자 상세 정보 보기\r\n                </Button>\r\n              )}\r\n            </div>\r\n            \r\n            <div>\r\n              {request.status === 'pending' && (\r\n                <Card>\r\n                  <CardTitle>상담 일정 등록</CardTitle>\r\n                  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"appointmentDate\">상담 날짜</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      id=\"appointmentDate\"\r\n                      value={appointmentDate}\r\n                      onChange={(e) => setAppointmentDate(e.target.value)}\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"appointmentTime\">상담 시간</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      id=\"appointmentTime\"\r\n                      value={appointmentTime}\r\n                      onChange={(e) => setAppointmentTime(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  {validationError && (\r\n                    <ErrorMessage>{validationError}</ErrorMessage>\r\n                  )}\r\n                  \r\n                  <ButtonGroup>\r\n                    <Button onClick={() => handleStatusUpdate('accepted')}>\r\n                      상담 확정\r\n                    </Button>\r\n                    <Button \r\n                      secondary \r\n                      onClick={() => handleStatusUpdate('cancelled')}\r\n                    >\r\n                      요청 거절\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Card>\r\n              )}\r\n              \r\n              {request.status === 'accepted' && (\r\n                <Card>\r\n                  <CardTitle>상담 진행</CardTitle>\r\n                  <Button onClick={() => handleStatusUpdate('completed')}>\r\n                    상담 완료 처리\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n              \r\n              <Card>\r\n                <CardTitle>상담 노트</CardTitle>\r\n                \r\n                <form onSubmit={handleAddNote}>\r\n                  <TextArea\r\n                    value={newNote}\r\n                    onChange={(e) => setNewNote(e.target.value)}\r\n                    placeholder=\"상담 내용, 후속 조치 등을 기록하세요...\"\r\n                  />\r\n                  \r\n                  <Button type=\"submit\">\r\n                    노트 저장\r\n                  </Button>\r\n                </form>\r\n                \r\n                {notes.length === 0 ? (\r\n                  <EmptyState>\r\n                    <p>등록된 상담 노트가 없습니다.</p>\r\n                  </EmptyState>\r\n                ) : (\r\n                  <NotesList>\r\n                    {notes.map(note => (\r\n                      <NoteItem key={note.id}>\r\n                        <NoteHeader>\r\n                          <NoteAuthor>{note.authorName}</NoteAuthor>\r\n                          <NoteDate>{note.createdAt.toLocaleString()}</NoteDate>\r\n                        </NoteHeader>\r\n                        <NoteContent>{note.content}</NoteContent>\r\n                      </NoteItem>\r\n                    ))}\r\n                  </NotesList>\r\n                )}\r\n              </Card>\r\n            </div>\r\n          </TwoColumnGrid>\r\n        </Card>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CounselingRecordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}