{"ast":null,"code":"// src/pages/LoginPage.js\nimport React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import styled from'styled-components';import{useAuth}from'../contexts/AuthContext';// 컨테이너\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #f8f9fa;\n`;// 로그인 카드\nconst LoginCard=styled.div`\n  width: 400px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n`;// 로고 영역\nconst LogoArea=styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n`;// 로고 텍스트\nconst LogoText=styled.h1`\n  font-size: 1.8rem;\n  color: #2a5e8c;\n  margin: 0;\n`;// 부제목\nconst Subtitle=styled.p`\n  color: #6c757d;\n  margin: 0.5rem 0 0;\n`;// 폼\nconst Form=styled.form`\n  display: flex;\n  flex-direction: column;\n`;// 폼 그룹\nconst FormGroup=styled.div`\n  margin-bottom: 1.5rem;\n`;// 라벨\nconst Label=styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #495057;\n`;// 인풋\nconst Input=styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  font-size: 1rem;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  transition: border-color 0.15s ease-in-out;\n  \n  &:focus {\n    border-color: #2a5e8c;\n    outline: none;\n  }\n`;// 버튼\nconst Button=styled.button`\n  background-color: #2a5e8c;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.75rem;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.15s ease-in-out;\n  \n  &:hover {\n    background-color: #1d4269;\n  }\n  \n  &:disabled {\n    background-color: #6c757d;\n    cursor: not-allowed;\n  }\n`;// 에러 메시지\nconst ErrorMessage=styled.p`\n  color: #dc3545;\n  margin-top: 1rem;\n  text-align: center;\n`;// 링크\nconst StyledLink=styled(Link)`\n  color: #2a5e8c;\n  text-decoration: none;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;// 링크 컨테이너\nconst LinkContainer=styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1.5rem;\n  font-size: 0.9rem;\n`;function LoginPage(){const{login,currentUser}=useAuth();const navigate=useNavigate();const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);// 이미 로그인되어 있으면 대시보드로 리디렉션\nuseEffect(()=>{if(currentUser){navigate('/');}},[currentUser,navigate]);const handleSubmit=async e=>{e.preventDefault();// 입력 검증\nif(!email||!password){return setError('이메일과 비밀번호를 모두 입력해주세요.');}try{setError('');setLoading(true);await login(email,password);navigate('/');}catch(error){console.error(\"로그인 오류:\",error);// 에러 메시지 설정\nif(error.code==='auth/user-not-found'||error.code==='auth/wrong-password'){setError('이메일 또는 비밀번호가 올바르지 않습니다.');}else if(error.code==='auth/too-many-requests'){setError('로그인 시도가 너무 많습니다. 잠시 후 다시 시도해주세요.');}else{setError('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');}}finally{setLoading(false);}};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(LoginCard,{children:[/*#__PURE__*/_jsxs(LogoArea,{children:[/*#__PURE__*/_jsx(LogoText,{children:\"\\uC554 \\uC0DD\\uC874\\uC790 \\uCF00\\uC5B4\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"\\uC0AC\\uD68C\\uBCF5\\uC9C0\\uC0AC \\uC804\\uC6A9 \\uD3EC\\uD138\"})]}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"email\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(Input,{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"})]}),error&&/*#__PURE__*/_jsx(ErrorMessage,{children:error}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:loading,children:loading?'로그인 중...':'로그인'}),/*#__PURE__*/_jsx(LinkContainer,{children:/*#__PURE__*/_jsx(StyledLink,{to:\"/forgot-password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})})]})]})});}export default LoginPage;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","styled","useAuth","jsx","_jsx","jsxs","_jsxs","Container","div","LoginCard","LogoArea","LogoText","h1","Subtitle","p","Form","form","FormGroup","Label","label","Input","input","Button","button","ErrorMessage","StyledLink","LinkContainer","LoginPage","login","currentUser","navigate","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleSubmit","e","preventDefault","console","code","children","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","disabled","to"],"sources":["C:/Users/20201/OneDrive/바탕 화면/patient_survey/web2/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// 컨테이너\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n`;\r\n\r\n// 로그인 카드\r\nconst LoginCard = styled.div`\r\n  width: 400px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n`;\r\n\r\n// 로고 영역\r\nconst LogoArea = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n// 로고 텍스트\r\nconst LogoText = styled.h1`\r\n  font-size: 1.8rem;\r\n  color: #2a5e8c;\r\n  margin: 0;\r\n`;\r\n\r\n// 부제목\r\nconst Subtitle = styled.p`\r\n  color: #6c757d;\r\n  margin: 0.5rem 0 0;\r\n`;\r\n\r\n// 폼\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// 폼 그룹\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\n// 라벨\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #495057;\r\n`;\r\n\r\n// 인풋\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  transition: border-color 0.15s ease-in-out;\r\n  \r\n  &:focus {\r\n    border-color: #2a5e8c;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// 버튼\r\nconst Button = styled.button`\r\n  background-color: #2a5e8c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.15s ease-in-out;\r\n  \r\n  &:hover {\r\n    background-color: #1d4269;\r\n  }\r\n  \r\n  &:disabled {\r\n    background-color: #6c757d;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\n// 에러 메시지\r\nconst ErrorMessage = styled.p`\r\n  color: #dc3545;\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\n// 링크\r\nconst StyledLink = styled(Link)`\r\n  color: #2a5e8c;\r\n  text-decoration: none;\r\n  \r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\n// 링크 컨테이너\r\nconst LinkContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nfunction LoginPage() {\r\n  const { login, currentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // 이미 로그인되어 있으면 대시보드로 리디렉션\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      navigate('/');\r\n    }\r\n  }, [currentUser, navigate]);\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // 입력 검증\r\n    if (!email || !password) {\r\n      return setError('이메일과 비밀번호를 모두 입력해주세요.');\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await login(email, password);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error(\"로그인 오류:\", error);\r\n      \r\n      // 에러 메시지 설정\r\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        setError('이메일 또는 비밀번호가 올바르지 않습니다.');\r\n      } else if (error.code === 'auth/too-many-requests') {\r\n        setError('로그인 시도가 너무 많습니다. 잠시 후 다시 시도해주세요.');\r\n      } else {\r\n        setError('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <LoginCard>\r\n        <LogoArea>\r\n          <LogoText>암 생존자 케어</LogoText>\r\n          <Subtitle>사회복지사 전용 포털</Subtitle>\r\n        </LogoArea>\r\n        \r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label htmlFor=\"email\">이메일</Label>\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"이메일 주소를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label htmlFor=\"password\">비밀번호</Label>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          \r\n          <Button type=\"submit\" disabled={loading}>\r\n            {loading ? '로그인 중...' : '로그인'}\r\n          </Button>\r\n          \r\n          <LinkContainer>\r\n            <StyledLink to=\"/forgot-password\">비밀번호 찾기</StyledLink>\r\n          </LinkContainer>\r\n        </Form>\r\n      </LoginCard>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}