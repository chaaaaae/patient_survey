{"ast":null,"code":"import React from'react';import{Box,Grid,Typography,Container,Paper}from'@mui/material';import{Radar,Bar}from'react-chartjs-2';import{Chart,RadialLinearScale,PointElement,LineElement,Filler,Legend,Tooltip,CategoryScale,LinearScale,BarElement}from'chart.js';import*as SurveyUtils from'../utils/SurveyUtils';// 차트 요소 등록\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(RadialLinearScale,PointElement,LineElement,Filler,Legend,Tooltip,CategoryScale,LinearScale,BarElement);// 레이블 및 매핑\nconst labelMap={physicalChange:'암 이후 내 몸의 변화',healthManagement:'건강한 삶을 위한 관리',socialSupport:'회복을 도와주는 사람들',psychologicalBurden:'심리적 부담',socialBurden:'사회적 삶의 부담',resilience:'암 이후 탄력성',lifestyle:'생활 습관'};const maxScores={physicalChange:40,healthManagement:25,socialSupport:20,psychologicalBurden:40,socialBurden:15,resilience:25,lifestyle:10};const SurveyResult=_ref=>{let{rawScores={},meanScores={},stdScores={},riskGroups={},overallFeedback=\"\",overallRiskGroup=\"\",answers={},riskByMean={}}=_ref;// 1) 데이터 전처리 - 실제 응답이 있는 섹션만 포함\nconst processed=Object.keys(rawScores).filter(key=>typeof meanScores[key]==='number'&&!isNaN(meanScores[key]))// 응답이 있는 섹션만\n.map(key=>{var _rawScores$key;const value=(_rawScores$key=rawScores[key])!==null&&_rawScores$key!==void 0?_rawScores$key:0;const mean=meanScores[key];const included=key!=='lifestyle';const sectionName=labelMap[key];// stdScores 프롭에서 직접 가져오고, 숫자가 아닌 경우 0으로 처리\nconst stdScore=included&&typeof stdScores[key]==='number'&&!isNaN(stdScores[key])?stdScores[key]:0;return{key,label:sectionName,value,mean,max:maxScores[key],stdScore:stdScore,level:included?SurveyUtils.getRiskGroup(sectionName,mean):'저위험집단',included};});// 1-1) 미응답(제외)된 섹션 안내 메시지 생성\nconst allSectionKeys=['physicalChange','healthManagement','socialSupport','psychologicalBurden','socialBurden','resilience'];const answeredKeys=processed.map(p=>p.key);// 실제 응답이 있는 섹션들\nconst excludedSections=allSectionKeys.filter(k=>!answeredKeys.includes(k));const excludedLabels=excludedSections.map(k=>labelMap[k]);// 전체 점수 계산\nconst totalScore=processed.filter(p=>p.included).reduce((sum,p)=>sum+p.stdScore,0)/processed.filter(p=>p.included).length;// 디버깅: mean, stdScore 값 콘솔 출력\nconsole.table(processed.map(_ref2=>{let{key,mean,stdScore}=_ref2;return{key,mean,stdScore};}));// 2) 레이더 차트 데이터\nconst radarData={labels:processed.filter(p=>p.included).map(p=>p.label),datasets:[{label:'표준화 점수',data:processed.filter(p=>p.included).map(p=>p.stdScore),backgroundColor:'rgba(25, 118, 210, 0.2)',borderColor:'rgba(25, 118, 210, 1)',borderWidth:2,pointBackgroundColor:'rgba(25, 118, 210, 1)'}]};// 3) 막대 차트 데이터\nconst cats=processed.filter(p=>p.included);const labels=cats.map(p=>p.label);const myScores=cats.map(p=>{var _p$stdScore;return(_p$stdScore=p.stdScore)!==null&&_p$stdScore!==void 0?_p$stdScore:0;});const avgScores=cats.map(()=>50);const barData={labels,datasets:[{label:'나의 T-점수',data:myScores,backgroundColor:'rgba(54,162,235,0.6)'},{label:'집단 평균(T=50)',data:avgScores,backgroundColor:'rgba(200,200,200,0.5)'}]};const barOptions={responsive:true,plugins:{legend:{position:'top'}},scales:{y:{beginAtZero:true,max:100,ticks:{stepSize:10}}}};// 4) 추가 피드백: answers 전체를 통째로 함수에 전달\nconst additionalComments=SurveyUtils.getAdditionalFeedback(answers,meanScores,riskByMean);return/*#__PURE__*/_jsx(Box,{sx:{backgroundColor:'background.default',py:6},children:/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:4,borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",sx:{fontWeight:'bold',mb:1,color:'primary.main'},children:\"\\uAC74\\uAC15 \\uAD00\\uB9AC \\uACB0\\uACFC\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",sx:{mb:4},color:\"text.secondary\",children:\"\\uD604\\uC7AC \\uC0C1\\uD0DC\\uB97C \\uC2DC\\uAC01\\uC801\\uC73C\\uB85C \\uD655\\uC778\\uD558\\uACE0, \\uC9D1\\uC911 \\uAD00\\uB9AC\\uAC00 \\uD544\\uC694\\uD55C \\uC601\\uC5ED\\uACFC \\uCD94\\uCC9C \\uC0AC\\uD56D\\uC744 \\uD655\\uC778\\uD558\\uC138\\uC694.\"}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:5,mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",sx:{fontWeight:'bold',mb:3,color:'primary.dark'},children:\"\\uC601\\uC5ED\\uBCC4 \\uC810\\uC218 \\uBE44\\uAD50\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',width:'100%',mx:'auto',height:400,maxWidth:800,position:'relative'},children:/*#__PURE__*/_jsx(Radar,{data:radarData,options:{responsive:true,maintainAspectRatio:false,scales:{r:{suggestedMin:0,suggestedMax:100}}}})})]}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:5,mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",sx:{fontWeight:'bold',mb:3,color:'primary.dark'},children:\"\\uCE74\\uD14C\\uACE0\\uB9AC\\uBCC4 \\uC810\\uC218\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',width:'100%',height:500,maxWidth:800,mx:'auto'},children:/*#__PURE__*/_jsx(Bar,{data:barData,options:barOptions})})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',mb:4,width:'100%'},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,backgroundColor:'white',borderRadius:2,width:'100%',textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:'bold',color:'primary.dark',mb:1},children:\"\\uC804\\uCCB4 \\uC810\\uC218\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{fontWeight:'bold',color:'text.primary'},children:[Math.round(totalScore),\"\\uC810\"]}),excludedLabels.length>0&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mt:2,color:'warning.main',fontWeight:500},children:[excludedLabels.join(', '),\" \\uC601\\uC5ED\\uC740 \\uC751\\uB2F5\\uD558\\uC9C0 \\uC54A\\uC544 \\uACB0\\uACFC\\uC5D0\\uC11C \\uC81C\\uC678\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"]})]})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:1,sx:{p:3,borderLeft:'4px solid #ffffff',height:'100%'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",align:\"center\",sx:{fontWeight:'bold',mb:1,color:'primary.dark'},children:\"\\uC804\\uCCB4 \\uD53C\\uB4DC\\uBC31\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",align:\"center\",sx:{mb:0.5},children:overallRiskGroup}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",color:\"text.secondary\",children:overallFeedback})]})}),additionalComments.length>0&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:1,sx:{p:3,borderLeft:'4px solid #ffffff'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",align:\"center\",sx:{fontWeight:'bold',mb:1,color:'primary.dark'},children:\"\\uCD94\\uAC00 \\uD53C\\uB4DC\\uBC31\"}),additionalComments.map((_ref3,idx)=>{let{text,style}=_ref3;return/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",sx:{mb:0.5,color:style==='error'?'error.main':style==='info'?'primary.main':style==='success'?'success.main':'text.primary',fontWeight:'bold'},children:text},idx);})]})})]})]})})});};export default SurveyResult;","map":{"version":3,"names":["React","Box","Grid","Typography","Container","Paper","Radar","Bar","Chart","RadialLinearScale","PointElement","LineElement","Filler","Legend","Tooltip","CategoryScale","LinearScale","BarElement","SurveyUtils","jsx","_jsx","jsxs","_jsxs","register","labelMap","physicalChange","healthManagement","socialSupport","psychologicalBurden","socialBurden","resilience","lifestyle","maxScores","SurveyResult","_ref","rawScores","meanScores","stdScores","riskGroups","overallFeedback","overallRiskGroup","answers","riskByMean","processed","Object","keys","filter","key","isNaN","map","_rawScores$key","value","mean","included","sectionName","stdScore","label","max","level","getRiskGroup","allSectionKeys","answeredKeys","p","excludedSections","k","includes","excludedLabels","totalScore","reduce","sum","length","console","table","_ref2","radarData","labels","datasets","data","backgroundColor","borderColor","borderWidth","pointBackgroundColor","cats","myScores","_p$stdScore","avgScores","barData","barOptions","responsive","plugins","legend","position","scales","y","beginAtZero","ticks","stepSize","additionalComments","getAdditionalFeedback","sx","py","children","maxWidth","elevation","borderRadius","variant","align","fontWeight","mb","color","display","justifyContent","alignItems","width","mx","height","options","maintainAspectRatio","r","suggestedMin","suggestedMax","textAlign","Math","round","mt","join","container","spacing","direction","item","xs","borderLeft","_ref3","idx","text","style"],"sources":["C:/Users/20201/OneDrive/바탕 화면/patient_survey/web1/src/component/SurveyResult.js"],"sourcesContent":["import React from 'react';\nimport { Box, Grid, Typography, Container, Paper } from '@mui/material';\nimport { Radar, Bar } from 'react-chartjs-2';\nimport {\n  Chart,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Legend,\n  Tooltip,\n  CategoryScale,\n  LinearScale,\n  BarElement\n} from 'chart.js';\n\nimport * as SurveyUtils from '../utils/SurveyUtils';\n\n// 차트 요소 등록\nChart.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Legend,\n  Tooltip,\n  CategoryScale,\n  LinearScale,\n  BarElement\n);\n\n// 레이블 및 매핑\nconst labelMap = {\n  physicalChange: '암 이후 내 몸의 변화',\n  healthManagement: '건강한 삶을 위한 관리',\n  socialSupport: '회복을 도와주는 사람들',\n  psychologicalBurden: '심리적 부담',\n  socialBurden: '사회적 삶의 부담',\n  resilience: '암 이후 탄력성',\n  lifestyle: '생활 습관'\n};\nconst maxScores = {\n  physicalChange: 40,\n  healthManagement: 25,\n  socialSupport: 20,\n  psychologicalBurden: 40,\n  socialBurden: 15,\n  resilience: 25,\n  lifestyle: 10\n};\n\nconst SurveyResult = ({\n  rawScores = {},\n  meanScores = {},\n  stdScores = {},\n    riskGroups = {},\n  overallFeedback = \"\",\n  overallRiskGroup = \"\",\n  answers = {},\n  riskByMean = {}\n}) => {  // 1) 데이터 전처리 - 실제 응답이 있는 섹션만 포함\n  const processed = Object.keys(rawScores)\n    .filter(key => typeof meanScores[key] === 'number' && !isNaN(meanScores[key])) // 응답이 있는 섹션만\n    .map((key) => {\n      const value = rawScores[key] ?? 0;\n      const mean = meanScores[key];\n      const included = key !== 'lifestyle';\n      const sectionName = labelMap[key];\n      // stdScores 프롭에서 직접 가져오고, 숫자가 아닌 경우 0으로 처리\n      const stdScore = included && typeof stdScores[key] === 'number' && !isNaN(stdScores[key]) \n        ? stdScores[key] \n        : 0;\n      return {\n        key,\n        label: sectionName,\n        value,\n        mean,\n        max: maxScores[key],\n        stdScore: stdScore,\n        level: included ? SurveyUtils.getRiskGroup(sectionName, mean) : '저위험집단',\n        included\n      };\n    });// 1-1) 미응답(제외)된 섹션 안내 메시지 생성\n  const allSectionKeys = ['physicalChange','healthManagement','socialSupport','psychologicalBurden','socialBurden','resilience'];\n  const answeredKeys = processed.map(p => p.key); // 실제 응답이 있는 섹션들\n  const excludedSections = allSectionKeys.filter(k => !answeredKeys.includes(k));\n  const excludedLabels = excludedSections.map(k => labelMap[k]);\n\n  // 전체 점수 계산\n  const totalScore = processed\n    .filter((p) => p.included)\n    .reduce((sum, p) => sum + p.stdScore, 0) /\n    processed.filter((p) => p.included).length;\n\n  // 디버깅: mean, stdScore 값 콘솔 출력\n  console.table(\n    processed.map(({ key, mean, stdScore }) => ({ key, mean, stdScore }))\n  );\n\n  // 2) 레이더 차트 데이터\n  const radarData = {\n    labels: processed.filter((p) => p.included).map((p) => p.label),\n    datasets: [\n      {\n        label: '표준화 점수',\n        data: processed.filter((p) => p.included).map((p) => p.stdScore),\n        backgroundColor: 'rgba(25, 118, 210, 0.2)',\n        borderColor: 'rgba(25, 118, 210, 1)',\n        borderWidth: 2,\n        pointBackgroundColor: 'rgba(25, 118, 210, 1)'\n      }\n    ]\n  };\n\n  // 3) 막대 차트 데이터\n  const cats = processed.filter((p) => p.included);\n  const labels = cats.map((p) => p.label);\n  const myScores = cats.map((p) => p.stdScore ?? 0);\n  const avgScores = cats.map(() => 50);\n  const barData = {\n    labels,\n    datasets: [\n      {\n        label: '나의 T-점수',\n        data: myScores,\n        backgroundColor: 'rgba(54,162,235,0.6)'\n      },\n      {\n        label: '집단 평균(T=50)',\n        data: avgScores,\n        backgroundColor: 'rgba(200,200,200,0.5)'\n      }\n    ]\n  };\n  const barOptions = {\n    responsive: true,\n    plugins: { legend: { position: 'top' } },\n    scales: {\n      y: { beginAtZero: true, max: 100, ticks: { stepSize: 10 } }\n    }\n  };\n\n  // 4) 추가 피드백: answers 전체를 통째로 함수에 전달\n  const additionalComments = SurveyUtils.getAdditionalFeedback(\n    answers,\n    meanScores,\n    riskByMean\n  );\n\n  return (\n    <Box sx={{ backgroundColor: 'background.default', py: 6 }}>\n      <Container maxWidth=\"lg\">\n        {/* 전체를 감싸는 하얀 배경 */}\n        <Paper elevation={3} sx={{ p: 4, borderRadius: 3 }}>\n          {/* 타이틀 & 설명 */}\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            sx={{ fontWeight: 'bold', mb: 1, color: 'primary.main' }}\n          >\n            건강 관리 결과\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            align=\"center\"\n            sx={{ mb: 4 }}\n            color=\"text.secondary\"\n          >\n            현재 상태를 시각적으로 확인하고, 집중 관리가 필요한 영역과 추천 사항을 확인하세요.\n          </Typography>\n\n          {/* 1. 영역별 점수 비교 */}\n          <Paper elevation={2} sx={{ p: 5, mb: 4 }}>\n            <Typography\n              variant=\"h6\"\n              align=\"center\"\n              sx={{ fontWeight: 'bold', mb: 3, color: 'primary.dark' }}\n            >\n              영역별 점수 비교\n            </Typography>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                mx: 'auto',\n                height: 400,\n                maxWidth: 800,\n                position: 'relative'\n              }}\n            >\n              <Radar\n                data={radarData}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  scales: { r: { suggestedMin: 0, suggestedMax: 100 } }\n                }}\n              />\n            </Box>\n          </Paper>\n\n          {/* 2. 카테고리별 점수 */}\n          <Paper elevation={2} sx={{ p: 5, mb: 4 }}>\n            <Typography\n              variant=\"h6\"\n              align=\"center\"\n              sx={{ fontWeight: 'bold', mb: 3, color: 'primary.dark' }}\n            >\n              카테고리별 점수\n            </Typography>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: 500,\n                maxWidth: 800,\n                mx: 'auto'\n              }}\n            >\n              <Bar data={barData} options={barOptions} />\n            </Box>\n          </Paper>\n\n          {/* 전체 점수 표시 */}\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              mb: 4,\n              width: '100%'\n            }}\n          >\n            <Paper\n              elevation={3}\n              sx={{\n                p: 3,\n                backgroundColor: 'white',\n                borderRadius: 2,\n                width: '100%',\n                textAlign: 'center'\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                sx={{ fontWeight: 'bold', color: 'primary.dark', mb: 1 }}\n              >\n                전체 점수\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                sx={{ fontWeight: 'bold', color: 'text.primary' }}\n              >\n                {Math.round(totalScore)}점\n              </Typography>\n              {/* 미응답(제외) 섹션 안내 */}\n              {excludedLabels.length > 0 && (\n                <Typography variant=\"body2\" sx={{ mt: 2, color: 'warning.main', fontWeight: 500 }}>\n                  {excludedLabels.join(', ')} 영역은 응답하지 않아 결과에서 제외되었습니다.\n                </Typography>\n              )}\n            </Paper>\n          </Box>\n\n          {/* 3. 피드백 카드 그리드 */}\n          <Grid container spacing={2} direction=\"column\">\n            {/* 전체 피드백 카드 */}\n            <Grid item xs={12}>\n              <Paper elevation={1} sx={{ p: 3, borderLeft: '4px solid #ffffff', height: '100%' }}>\n                <Typography\n                  variant=\"subtitle1\"\n                  align=\"center\"\n                  sx={{ fontWeight: 'bold', mb: 1, color: 'primary.dark' }}\n                >\n                  전체 피드백\n                </Typography>\n                <Typography variant=\"subtitle2\" align=\"center\" sx={{ mb: 0.5 }}>\n                  {overallRiskGroup}\n                </Typography>\n                <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\">\n                  {overallFeedback}\n                </Typography>\n              </Paper>\n            </Grid>\n\n            {/* 추가 피드백 카드 */}\n            {additionalComments.length > 0 && (\n              <Grid item xs={12}>\n                <Paper elevation={1} sx={{ p: 3, borderLeft: '4px solid #ffffff' }}>\n                  <Typography\n                    variant=\"subtitle1\"\n                    align=\"center\"\n                    sx={{ fontWeight: 'bold', mb: 1, color: 'primary.dark' }}\n                  >\n                    추가 피드백\n                  </Typography>\n                  {additionalComments.map(({ text, style }, idx) => (\n                    <Typography\n                      key={idx}\n                      variant=\"body2\"\n                      align=\"center\"\n                      sx={{\n                        mb: 0.5,\n                        color:\n                          style === 'error'\n                            ? 'error.main'\n                            : style === 'info'\n                            ? 'primary.main'\n                            : style === 'success'\n                            ? 'success.main'\n                            : 'text.primary',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      {text}\n                    </Typography>\n                  ))}\n                </Paper>\n              </Grid>\n            )}\n          </Grid>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default SurveyResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}